[gd_scene load_steps=7 format=2]

[ext_resource path="res://addons/moe.ero-one.fsm/content/FSMGraph/FSMGraphUI/FSMGraphUI.gd" type="Script" id=1]
[ext_resource path="res://addons/moe.ero-one.fsm/content/FSMGraph/FSMGraph.tscn" type="PackedScene" id=2]
[ext_resource path="res://addons/moe.ero-one.fsm/content/FSMGraph/FSMGraphUI/NewElementBtn/NewElementBtn.tscn" type="PackedScene" id=3]
[ext_resource path="res://addons/moe.ero-one.fsm/assets/white.png" type="Texture" id=4]
[ext_resource path="res://addons/moe.ero-one.fsm/content/FSMGraph/FSMGraphUI/FSMGraphContextualMenu.tscn" type="PackedScene" id=5]

[sub_resource type="Animation" id=1]

length = 1.0
loop = false
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:anchor/left")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:anchor/top")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:anchor/right")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 1 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:anchor/bottom")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 1 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath(".:margin/left")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0.0 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:margin/top")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0.0 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath(".:margin/right")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0.0 ]
}
tracks/7/type = "value"
tracks/7/path = NodePath(".:margin/bottom")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0.0 ]
}

[node name="FSMGraphUI" type="Popup" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_right = 1024.0
margin_bottom = 600.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
popup_exclusive = false
script = ExtResource( 1 )
_sections_unfolded = [ "Focus", "Mouse", "Rect", "Size Flags", "Visibility" ]

[node name="FSMGraph" parent="." index="0" instance=ExtResource( 2 )]

margin_right = 12.0
margin_bottom = 12.0
_sections_unfolded = [ "Anchor", "Focus", "Hint", "Margin", "Mouse", "Rect", "Scroll", "Size Flags" ]

[node name="NewElementBtn" parent="." index="1" instance=ExtResource( 3 )]

margin_left = 500.0
margin_top = 260.0
margin_right = 630.0
margin_bottom = 330.0
mouse_filter = 2
_sections_unfolded = [ "Mouse", "Rect", "Visibility" ]

[node name="initSetup" type="AnimationPlayer" parent="." index="2"]

root_node = NodePath("..")
autoplay = ""
playback_process_mode = 1
playback_default_blend_time = 0.0
playback_speed = 1.0
anims/default = SubResource( 1 )
blend_times = [  ]

[node name="debug" type="Label" parent="." index="3"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 2
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 0
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="transitionScriptChooseDialog" type="FileDialog" parent="." index="4"]

visible = false
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 317.0
margin_top = 183.0
margin_right = -268.0
margin_bottom = -160.0
rect_min_size = Vector2( 200, 70 )
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
popup_exclusive = false
window_title = "Open a File"
resizable = false
dialog_hide_on_ok = false
mode_overrides_title = true
mode = 0
access = 0
filters = PoolStringArray( "*.gd" )
show_hidden_files = false
current_dir = "res://"
current_file = ""
current_path = "res://"

[node name="HelpText" type="RichTextLabel" parent="." index="5"]

visible = false
anchor_left = 1.0
anchor_top = 0.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 225.0
margin_top = 4.0
margin_right = -419.0
margin_bottom = 25.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = true
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
bbcode_enabled = false
bbcode_text = "##################################### README  ###############################
#
# * To create new state check  \"Create New:\" subsection in FSM inspector 
# 
# * Dont be afraid to check FSM script to check available methods 
#
# * Exported Variables of FSM which are intended to be used by users:
#
#     NodePath logic_root_path: states usually perform logic based on variables in
#         some external node, like 'Enemy'. This variable usually points to this node. 
#         It dont have any other purpose other than to be available for child states.
#
#     bool only_active_state_on_scene: if this is true, then only active state is present
#         on scene tree. It might be handy if states have visual representation
#
#     bool init_manually: #you can set this to true to set export vars in runtime from code,
#         before you will be able to use this FSM you will need to run init() function. 
#         Run init() only after setting exported variables.
#
#     string Initial state: you can choose from this list with which state FSM should start.
#
#     int update_mode: if set to manual, then it's up to you to update this FSM. In this case 
#         you need to call FSM.update(inDeltaTime) to update this fsm (usually once per frame)
#         
#
########## 
# * Exported variables that are editor helpers:
#
#      Subdirectory for states: you can set name of directory which will be automatically 
#          created to hold all states for this FSM
#
#      Create state with name: when you enter and accept name for a state it will be 
#          immediatelly created and added to scene tree as a child of current FSM
#          This state will have an unique script in which you can implement state logic.
#
#
###########
# * Functions that are intended to be used by users:
#
#     get_state_id(): return name of current state
#
#     get_state(): return node with current state  
#
#     change_state_to(inNewStateID): can be used to change state. 
#        Usually dont need to be used if you are using graph to link your states
#      
#     state_time(): returns how long current state is active
#
#     update(inDeltaTime): update FSM to update current state. Should be
#        used in every game tick, but should use it only if you are using 
#        update_mode=\"Manual\".
#
#    init(): use only if init_manually = true. You will be able to pass additional arguments
#        to your states and transitions
#
#
################
# * Members that are intended to be used by users:
#    STATE: you can use this dictionary to access state id. Using is is recommended because it's less error prone than 
#        entering states ids by hand. ex. fsm.change_state_to(fsm.STATE.START) <- when one of your states is named 'START')

"
visible_characters = -1
percent_visible = 1.0
meta_underlined = true
tab_size = 4
text = "##################################### README  ###############################
#
# * To create new state check  \"Create New:\" subsection in FSM inspector 
# 
# * Dont be afraid to check FSM script to check available methods 
#
# * Exported Variables of FSM which are intended to be used by users:
#
#     NodePath logic_root_path: states usually perform logic based on variables in
#         some external node, like 'Enemy'. This variable usually points to this node. 
#         It dont have any other purpose other than to be available for child states.
#
#     bool only_active_state_on_scene: if this is true, then only active state is present
#         on scene tree. It might be handy if states have visual representation
#
#     bool init_manually: #you can set this to true to set export vars in runtime from code,
#         before you will be able to use this FSM you will need to run init() function. 
#         Run init() only after setting exported variables.
#
#     string Initial state: you can choose from this list with which state FSM should start.
#
#     int update_mode: if set to manual, then it's up to you to update this FSM. In this case 
#         you need to call FSM.update(inDeltaTime) to update this fsm (usually once per frame)
#         
#
########## 
# * Exported variables that are editor helpers:
#
#      Subdirectory for states: you can set name of directory which will be automatically 
#          created to hold all states for this FSM
#
#      Create state with name: when you enter and accept name for a state it will be 
#          immediatelly created and added to scene tree as a child of current FSM
#          This state will have an unique script in which you can implement state logic.
#
#
###########
# * Functions that are intended to be used by users:
#
#     get_state_id(): return name of current state
#
#     get_state(): return node with current state  
#
#     change_state_to(inNewStateID): can be used to change state. 
#        Usually dont need to be used if you are using graph to link your states
#      
#     state_time(): returns how long current state is active
#
#     update(inDeltaTime): update FSM to update current state. Should be
#        used in every game tick, but should use it only if you are using 
#        update_mode=\"Manual\".
#
#    init(): use only if init_manually = true. You will be able to pass additional arguments
#        to your states and transitions
#
#
################
# * Members that are intended to be used by users:
#    STATE: you can use this dictionary to access state id. Using is is recommended because it's less error prone than 
#        entering states ids by hand. ex. fsm.change_state_to(fsm.STATE.START) <- when one of your states is named 'START')

"
scroll_active = true
scroll_following = false
selection_enabled = false
override_selected_font_color = false
_sections_unfolded = [ "BBCode", "Rect" ]

[node name="TextureRect" type="TextureRect" parent="HelpText" index="1"]

modulate = Color( 0, 0, 0, 0.591608 )
show_behind_parent = true
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 1.0
anchor_bottom = 1.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
texture = ExtResource( 4 )
expand = true
stretch_mode = 0
_sections_unfolded = [ "Margin", "Material", "Visibility" ]

[node name="close" type="Button" parent="." index="6"]

anchor_left = 1.0
anchor_top = 0.0
anchor_right = 1.0
anchor_bottom = 0.0
margin_left = -34.0
margin_top = 4.0
margin_right = -14.0
margin_bottom = 24.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
group = null
text = "X"
flat = false
align = 1
_sections_unfolded = [ "Anchor" ]

[node name="VBoxContainer" type="VBoxContainer" parent="." index="7"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_right = 40.0
margin_bottom = 40.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
alignment = 0

[node name="btnRefresh" type="Button" parent="VBoxContainer" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_right = 60.0
margin_bottom = 20.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
group = null
text = "Refresh"
flat = false
align = 1
_sections_unfolded = [ "Anchor", "Margin", "Rect", "Visibility" ]

[node name="btnHelp" type="Button" parent="VBoxContainer" index="1"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 24.0
margin_right = 60.0
margin_bottom = 44.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
group = null
text = "Help"
flat = false
align = 1

[node name="btnNewState" type="Button" parent="VBoxContainer" index="2"]

visible = false
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 23.0
margin_right = 119.0
margin_bottom = 43.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
group = null
text = "Create new State"
flat = false
align = 1

[node name="ContextualMenu" parent="." index="8" instance=ExtResource( 5 )]

margin_left = 800.0
margin_top = 120.0
margin_right = 1000.0
margin_bottom = 420.0

[connection signal="resized" from="." to="." method="_on_FSMGraphUI_resized"]

[connection signal="arrowDragFinishedAtEmptySpace" from="FSMGraph" to="." method="_on_FSMGraph_arrowDragFinishedAtEmptySpace"]

[connection signal="gui_input" from="FSMGraph" to="." method="_on_FSMGraph_gui_input"]

[connection signal="openScriptRequest" from="FSMGraph" to="." method="_on_FSMGraph_openScriptRequest"]

[connection signal="selectNodeRequest" from="FSMGraph" to="." method="_on_FSMGraph_selectNodeRequest"]

[connection signal="stateCreateRequest" from="NewElementBtn" to="." method="_on_NewElementBtn_stateCreateRequest"]

[connection signal="transitionCreateRequest" from="NewElementBtn" to="." method="_on_NewElementBtn_transitionCreateRequest"]

[connection signal="confirmed" from="transitionScriptChooseDialog" to="." method="_on_transitionScriptChooseDialog_confirmed"]

[connection signal="file_selected" from="transitionScriptChooseDialog" to="." method="_on_transitionScriptChooseDialog_file_selected"]

[connection signal="pressed" from="close" to="." method="_on_close_pressed"]

[connection signal="pressed" from="VBoxContainer/btnRefresh" to="." method="_on_btnRefresh_pressed"]

[connection signal="pressed" from="VBoxContainer/btnHelp" to="." method="_on_btnHelp_pressed"]

[connection signal="pressed" from="VBoxContainer/btnNewState" to="." method="_on_btnNewState_pressed"]


